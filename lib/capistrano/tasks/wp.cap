namespace :wp do

  task :set_permissions do
    on roles(:app) do
      execute :chmod, "666 #{shared_path}/.htaccess"
      execute :chmod, "-R 777 #{shared_path}/content/uploads"
      execute :setfacl, "-R -m u:apache:rwx #{shared_path}/content/uploads"
      execute :setfacl, "-R -d -m g::rwx #{shared_path}/content/uploads"
      execute :setfacl, "-R -d -m o::rwx #{shared_path}/content/uploads"
    end
  end

  namespace :setup do

    # Generates a random password and stores it as :wp_pass
    task :generate_password do
      o = [('a'..'z'), ('A'..'Z')].map { |i| i.to_a }.flatten
      password = (0...18).map { o[rand(o.length)] }.join
      set :wp_pass, password
    end

    task :do_setup do
      # Get WP details from config in /config
      title = fetch(:wp_sitename)
      email = fetch(:wp_email)
      user = fetch(:wp_user)
      password = fetch(:wp_pass)
      wp_siteurl = fetch(:wp_target_url)

      # Install WordPress
      execute :wp, "core install --url='#{wp_siteurl}' --title='#{title}' --admin_user='#{user}' --admin_password='#{password}' --admin_email='#{email}' --path='wp'"
    end

    # Create wp-config.php
    task :create_wp_config do
      database = YAML::load_file('config/database.yml')['local']
      secret_keys = capture("curl -s -k https://api.wordpress.org/secret-key/1.1/salt")
      db_config = ERB.new(File.read('config/templates/wp-config.php.erb')).result(binding)
      remote_config = false
      File.open("wp-config.php", 'w') {|f| f.write(db_config) }
    end

    desc "Generates wp-config.php on remote server"
    task :generate_remote_files do
      on roles(:web) do

        # Get details for WordPress config file
        secret_keys = capture("curl -s -k https://api.wordpress.org/secret-key/1.1/salt")
        wp_siteurl = fetch(:stage_url)
        database = YAML::load_file('config/database.yml')[fetch(:stage).to_s]
        remote_config = true

        # Create config file in remote environment
        db_config = ERB.new(File.read('config/templates/wp-config.php.erb')).result(binding)
        io = StringIO.new(db_config)
        upload! io, File.join(shared_path, "wp-config.php")

        # Create .htaccess in remote environment
        accessfile = ERB.new(File.read('config/templates/.htaccess.erb')).result(binding)
        io = StringIO.new(accessfile)
        upload! io, File.join(shared_path, ".htaccess")
      end
      # Set some permissions
      invoke 'wp:set_permissions'
    end

    desc "Setup WP on remote environment"
    task :remote => ['wp:setup:generate_password'] do
      invoke 'deploy'
      invoke 'wp:setup:generate_remote_files'
      on roles(:web) do

        within release_path do
          set :wp_target_url, fetch(:stage_url)
          invoke 'wp:setup:do_setup'

          if !fetch(:setup_all)
            puts <<-MSG
            \e[32m
            =========================================================================
              WordPress has successfully been installed. Here are your login details:

              Username:       #{user}
              Password:       #{password}
              Email address:  #{email}
              Log in at:      #{wp_siteurl}/wp/wp-admin
            =========================================================================
            \e[0m
            MSG
          end

        end

      end
    end

    desc "Setup WP on local environment"
    task :local => ['wp:setup:generate_password'] do

      if fetch(:vagrant_local)
        on roles(:dev) do |host|
          within fetch(:deploy_to) do
            set :wp_target_url, fetch(:wp_localurl)
            invoke 'wp:setup:create_wp_config'
            invoke 'wp:setup:do_setup'

            puts <<-MSG
            \e[32m
            =========================================================================
              WordPress has successfully been installed. Here are your login details:

              Username:       #{user}
              Password:       #{password}
              Email address:  #{email}
              Log in at:      #{wp_siteurl}/wp/wp-admin
            =========================================================================
            \e[0m
            MSG

          end
        end

      else

        run_locally do
          set :wp_target_url, fetch(:wp_localurl)
          invoke 'wp:setup:create_wp_config'
          invoke 'wp:setup:do_setup'

          puts <<-MSG
          \e[32m
          =========================================================================
            WordPress has successfully been installed. Here are your login details:

            Username:       #{user}
            Password:       #{password}
            Email address:  #{email}
            Log in at:      #{wp_siteurl}/wp/wp-admin
          =========================================================================
          \e[0m
          MSG
        end

      end
    end

    desc "Setup WP on remote and local environments"
    task :both => ['wp:setup:generate_password'] do
      set :setup_all, true

      # Setup remote and local envs
      invoke "wp:setup:remote"
      invoke "wp:setup:local"
    end
  end

end
