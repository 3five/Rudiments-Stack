module.exports = function(grunt) {

    // 1. All configuration goes here 
    grunt.initConfig({
        pkg: grunt.file.readJSON('package.json'),

        // Grunt Concat
        concat: {
            libs_dev: {
                options: {
                    sourceMap: true,
                },
                src: [
                    '<%= pkg._bowerpath %>/debug/ba-debug.js',
                    '<%= pkg._bowerpath %>/bxSlider/dist/jquery.bxslider.js',
                    '<%= pkg._bowerpath %>/fitvids/jquery.fitvids.js',
                    '<%= pkg._bowerpath %>/jquery.transit/jquery.transit.js',
                ], 
                dest: '<%= pkg._themepath %>/js/libs/libs.js',
            },
            libs_prod: {
                options: {
                    sourceMap: true,
                },
                src: [
                    '<%= pkg._bowerpath %>/bxSlider/dist/jquery.bxslider.js',
                    '<%= pkg._bowerpath %>/fitvids/jquery.fitvids.js',
                    '<%= pkg._bowerpath %>/jquery.transit/jquery.transit.js',
                    '<%= pkg._themepath %>/js/libs/*.js',
                ], 
                dest: '<%= pkg._themepath %>/js/libs/libs.js',
            },
            scripts: {
                options: {
                    banner: '\n\n' +
                        '// Do not edit this file directly. it is generated by Grunt. Please edit the source files in the "scripts" directory of this folder.\n\n' +
                        '/**\n' +
                        '  * @namespace three_five\n' +
                        '  * @since <%= pkg.version %> built on <%= grunt.template.today("dd-mm-yyyy") %>\n' +
                        '  * @desc The three_five namespace stores all custom functions, data, application states and an empty events object to bind custom events to.\n' +
                        '  * It is aliased to the letter "t" in the code below for the sake of brevity.\n' +
                        '*/\n\n' +
                        'var three_five = window.three_five || {};\n\n' +
                        '(function (window, document, $, t, m) {\n\n',
                    footer: '\n\n})(window, document, jQuery, three_five);',
                    sourceMap: true,
                },
                src: [
                // List each script individually here in the order that you want them to concatenate (top to bottom)
                    '<%= pkg._themepath %>/js/scripts/example.js',
                    '<%= pkg._themepath %>/js/scripts/navigation.js',
                ],
                dest: '<%= pkg._themepath %>/js/scripts.js',
            }
        },

        modernizr: {
            theme: {
                "devFile" : "<%= pkg._bowerpath %>/modernizr/modernizr.js",
                "outputFile" : "<%= pkg._themepath %>/js/libs/modernizr.min.js",

                "extra" : {
                    "shiv" : true,
                    "printshiv" : false,
                    "load" : true,
                    "flexbox": true,
                    "csstransforms": true,
                    "csstransforms3d": true,
                    "csstransitions": true,
                    "multiplebgs": false,
                    "cssanimations": false,
                    "svg": true,
                    "mq" : true,
                    "cssclasses" : true,
                },

                "extensibility" : {
                    "addtest" : true,
                    "prefixed" : true,
                    "teststyles" : true,
                    "testprops" : true,
                    "testallprops" : true,
                    "hasevents" : false,
                    "prefixes" : true,
                    "domprefixes" : true
                },

                "uglify" : true,

                "tests" : [
                    'css_boxsizing',
                    'css_mediaqueries',
                    'css_remunit'
                ],

                "parseFiles" : true,
                "files" : {
                    "src": [
                        'scss/**/*.scss',
                        'scss/*.scss',
                        'js/scripts.js'
                    ]
                },
                "matchCommunityTests" : true

            }
        },

        // Uglify 
        uglify: {
            theme: {
                files: {
                    '<%= pkg._themepath %>/js/libs/libs.min.js': ['<%= pkg._themepath %>/js/libs/libs.js'],
                    '<%= pkg._themepath %>/js/scripts.min.js': ['<%= pkg._themepath %>/js/scripts.js']
                }
            }
        },

        // Imagemin
        imagemin: {
            dynamic: {
                files: [{
                    expand: true,
                    cwd: '<%= pkg._themepath %>/images/',
                    src: ['*.{png,jpg,gif}'],
                    dest: '<%= pkg._themepath %>/images/build/'
                }]
            }
        },

        jshint: {
            // code here
        },

        // Compass
        compass: {
            dev: {
                options: {
                    basePath:       '<%= pkg._themepath %>',
                    sourcemap:      true,
                    cssDir:         'css',
                    sassDir:        'scss',
                    imagesDir:      'images',
                    javascriptsDir: 'js',
                    fontsDir:       'fonts',
                    environment:    'development',
                    outputStyle:    'expanded',
                }
            },
            prod: {
                options: {
                    basePath:       '<%= pkg._themepath %>',
                    sourcemap:      true,
                    cssDir:         'css',
                    sassDir:        'scss',
                    imagesDir:      'images',
                    javascriptsDir: 'js',
                    fontsDir:       'fonts',
                    environment:    'production',
                    outputStyle:    'compressed',
                    force:          true,
                }
            }
        },


        // Make .pot file
        makepot: {
            theme: {
                options: {
                    cwd: '<%= pkg._themepath %>',
                    domainPath: '/languages',
                    potFilename: '<%= pkg.name %>.pot',
                    type: 'wp-theme'
                }
            }
            /*plugin_name: {
                options: {
                    cwd: '<%= pkg._pluginspath %>/plugin_name',
                    domainPath: '/languages',
                    potFilename: 'plugin_name.pot',
                    type: 'wp-plugin'
                }
            }
            repeat as necessary
            */
        },

        // Watch
        watch: {
            options: {
                livereload: true,
            },
            scripts: {
                files: ['<%= pkg._themepath %>/js/scripts/*.js'],
                tasks: [
                    'concat:libs_dev', 
                    'concat:scripts', 
                    'uglify',
                    ],
                options: {
                    spawn: false,
                },
            },
            styles: {
                files: [
                    '<%= pkg._themepath %>/scss/**/*.scss',
                    '<%= pkg._themepath %>/scss/*.scss'
                ],
                tasks: [
                    'compass:dev',
                ],
                options: {
                    spawn: false,
                }
            }
        }

    });

    // 3. Where we tell Grunt we plan to use this plug-in.
    require('load-grunt-tasks')(grunt);

    // 4. Where we tell Grunt what to do when we type "grunt" into the terminal.
    grunt.registerTask(
        'default', [
            'concat:libs_dev',
            'concat:scripts',
            'modernizr:theme',
            'compass:dev',
            'newer:imagemin:dynamic',
        ]);

    grunt.registerTask(
        'production', [
            'concat:libs_prod',
            'concat:scripts',
            'modernizr:theme',
            'uglify:theme',
            'compass:prod',
            'newer:imagemin:dynamic',
        ]);

};